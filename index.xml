<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gamgam&#39;s blog</title>
    <link>https://gamgam330.github.io/</link>
    <description>Recent content on gamgam&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Thu, 02 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://gamgam330.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Minimum Spanning Tree</title>
      <link>https://gamgam330.github.io/study/Algorithm/2023/02/02/MST.html/</link>
      <pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/study/Algorithm/2023/02/02/MST.html/</guid>
      <description>&lt;p&gt;&lt;code&gt;MST(최소 신장트리)&lt;/code&gt;는 간선들의 가중치 합이 최소가 되는 신장트리이다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dynamic Programming</title>
      <link>https://gamgam330.github.io/study/Algorithm/2023/01/31/dynamicProgramming.html/</link>
      <pubDate>Tue, 31 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/study/Algorithm/2023/01/31/dynamicProgramming.html/</guid>
      <description>&lt;p&gt;&lt;code&gt;다이나믹 프로그래밍(동적 프로그래밍)&lt;/code&gt;은 하나의 문제를 단 한 번만 풀도록 하는 알고리즘이다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Greedy</title>
      <link>https://gamgam330.github.io/study/Algorithm/2023/01/26/greedy.html/</link>
      <pubDate>Thu, 26 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/study/Algorithm/2023/01/26/greedy.html/</guid>
      <description>&lt;p&gt;눈앞의 이익만 우선 추구하는 알고리즘을 총칭해서 &lt;code&gt;그리디 알고리즘&lt;/code&gt;이라고 한다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>topologicalSort</title>
      <link>https://gamgam330.github.io/study/Algorithm/2023/01/26/topologicalSort.html/</link>
      <pubDate>Thu, 26 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/study/Algorithm/2023/01/26/topologicalSort.html/</guid>
      <description>&lt;p&gt;&lt;code&gt;위상정렬&lt;/code&gt;은 순서가 정해져 있는 일련의 작업을 차례때로 수행해야 할 때 사용할 수 있는 알고리즘이다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Binary Search Tree</title>
      <link>https://gamgam330.github.io/study/Algorithm/2023/01/16/BST.html/</link>
      <pubDate>Mon, 16 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/study/Algorithm/2023/01/16/BST.html/</guid>
      <description>&lt;p&gt;&lt;code&gt;이진검색트리(Binary Search Tree)&lt;/code&gt;는 검색 방법 중 한가지로, 다음과 같은 특징을 갖는다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Graph</title>
      <link>https://gamgam330.github.io/study/Algorithm/2023/01/14/Graph.html/</link>
      <pubDate>Sat, 14 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/study/Algorithm/2023/01/14/Graph.html/</guid>
      <description>&lt;p&gt;그래프는 현상이나 사물을 정점과 간선으로 표현하는것으로, &lt;code&gt;점정(Vertex)&lt;/code&gt;은 대상이나 개체를 나타내고 &lt;code&gt;간선(Edge)&lt;/code&gt;은 이들 간의 관계를 나타낸다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AVLTree</title>
      <link>https://gamgam330.github.io/study/Algorithm/2023/01/11/AVLTree.html/</link>
      <pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/study/Algorithm/2023/01/11/AVLTree.html/</guid>
      <description>&lt;p&gt;&lt;code&gt;AVL트리&lt;/code&gt; 모든 노드의 왼쪽과 오른쪽 서브트리의 높이차가 1이하인 이진탐색트리를 말한다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hashTable</title>
      <link>https://gamgam330.github.io/study/Algorithm/2023/01/10/hashTable.html/</link>
      <pubDate>Tue, 10 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/study/Algorithm/2023/01/10/hashTable.html/</guid>
      <description>&lt;p&gt;&lt;code&gt;HashTable&lt;/code&gt;은 데이터를 저장하는 자료구조 중 하나이다. 빠르게 데이터를 검색할 수 있는 자료구조 중 하나이다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>binarySearch</title>
      <link>https://gamgam330.github.io/study/Algorithm/2023/01/09/binarySearch.html/</link>
      <pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/study/Algorithm/2023/01/09/binarySearch.html/</guid>
      <description>&lt;p&gt;&lt;code&gt;binary search&lt;/code&gt; / 이분탐색은 정렬된 리스트를 절반씩 나눠가며 탐색하는 알고리즘이다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>heapSort</title>
      <link>https://gamgam330.github.io/study/Algorithm/2023/01/03/heapsort.html/</link>
      <pubDate>Tue, 03 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/study/Algorithm/2023/01/03/heapsort.html/</guid>
      <description>&lt;p&gt;&lt;code&gt;병합정렬, 퀵정렬, 힙정렬&lt;/code&gt;에 대해 정리해보도록하겠다.
단순정렬의 시간복잡도는 삽입정렬을 제외한 모든정렬이 O(N^2)이다. 하지만 지금부터 볼 병합정렬과 퀵정렬 힙정렬은 모두 시간복잡도가 단순정렬보다 작다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>quickSort</title>
      <link>https://gamgam330.github.io/study/Algorithm/2023/01/03/quicksort.html/</link>
      <pubDate>Tue, 03 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/study/Algorithm/2023/01/03/quicksort.html/</guid>
      <description>&lt;p&gt;&lt;code&gt;병합정렬, 퀵정렬, 힙정렬&lt;/code&gt;에 대해 정리해보도록하겠다.
단순정렬의 시간복잡도는 삽입정렬을 제외한 모든정렬이 O(N^2)이다. 하지만 지금부터 볼 병합정렬과 퀵정렬 힙정렬은 모두 시간복잡도가 단순정렬보다 작다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mergeSort</title>
      <link>https://gamgam330.github.io/study/Algorithm/2022/12/03/mergeSort.html/</link>
      <pubDate>Sat, 03 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/study/Algorithm/2022/12/03/mergeSort.html/</guid>
      <description>&lt;p&gt;#정렬&lt;/p&gt;
&lt;p&gt;##병합정렬
&lt;code&gt;병합정렬, 퀵정렬, 힙정렬&lt;/code&gt;에 대해 정리해보도록하겠다.
단순정렬의 시간복잡도는 삽입정렬을 제외한 모든정렬이 O(N^2)이다. 하지만 지금부터 볼 병합정렬과 퀵정렬 힙정렬은 모두 시간복잡도가 단순정렬보다 작다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Spring 객체지향과 SOLID</title>
      <link>https://gamgam330.github.io/study/spring/2022/11/27/spring1.html/</link>
      <pubDate>Sun, 27 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/study/spring/2022/11/27/spring1.html/</guid>
      <description>&lt;p&gt;자바를 기반으로한 spring 프레임워크는 &lt;code&gt;객체지향이라&lt;/code&gt;는 가장 큰 장점을 가지고 있다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BOJ 1647</title>
      <link>https://gamgam330.github.io/study/baekjoon/2022/11/13/boj1647.html/</link>
      <pubDate>Sun, 13 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/study/baekjoon/2022/11/13/boj1647.html/</guid>
      <description>&lt;p&gt;백준 1647문제를 풀기 위해선 &lt;code&gt;크루스칼 알고리즘&lt;/code&gt; / &lt;code&gt;union-find 알고리즘&lt;/code&gt; / &lt;code&gt;BFS&lt;/code&gt;, &lt;code&gt;DFS&lt;/code&gt; 알고리즘에 대해 알아야 한다&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BOJ 1916</title>
      <link>https://gamgam330.github.io/study/baekjoon/2022/11/04/boj1916.html/</link>
      <pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/study/baekjoon/2022/11/04/boj1916.html/</guid>
      <description>&lt;p&gt;백준 1916번 문제는 다익스트라 문제로 &lt;code&gt;너비우선탐색&lt;/code&gt; 과 &lt;code&gt;우선순위 큐&lt;/code&gt; 개념을 알지못한다면 이 두가지 개념을 먼저 정리하고 오는것을 추천한다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>백준 24445 BFS</title>
      <link>https://gamgam330.github.io/study/baekjoon/2022/10/15/boj24445.html/</link>
      <pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/study/baekjoon/2022/10/15/boj24445.html/</guid>
      <description>&lt;p&gt;24445번 문제에 주의사항은 &lt;code&gt;내림차순&lt;/code&gt;인것같다. 나는 내림차순을 생각하지 않고 풀다가 한번 틀렸다.&lt;br&gt;
BFS에서 중요한 개념은 &lt;code&gt;큐&lt;/code&gt;와 &lt;code&gt;그래프&lt;/code&gt;이다.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://gamgam330.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/about/</guid>
      <description>자기소개 </description>
    </item>
    
    <item>
      <title>Archive</title>
      <link>https://gamgam330.github.io/archive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gamgam330.github.io/archive/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
